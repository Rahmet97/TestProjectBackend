version: "3.0"

services:
  django:
    build: .
    container_name: django
    command: gunicorn TestProject.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
      - static_volume:/home/app/django/static
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
  db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=yagona_billing_db
      - POSTGRES_USER=unicon_yagonabilling_admin
      - POSTGRES_PASSWORD=yagonabilling_admin_unicon_uz
  dsv-server-vpn-client:
    build: ./dsv-service-launcher
    container_name: dsv-server-vpn-client
    ports:
      - "9090:9090"
    volumes:
      - .:/dsv-server-vpn-client
      - /etc/timezone:/etc/timezone
      - /etc/localtime:/etc/localtime:ro
      - ./dsv-service-launcher/vpn-client/client-eimzo.conf:/opt/app/vpn-client/client-eimzo.conf
      - ./dsv-service-launcher/vpn-client/client-unicon.uz.yks:/opt/app/vpn-client/client-unicon.uz.yks
      - ./dsv-service-launcher/logs:/opt/app/logs
    extra_hosts:
      - 'e-imzo.uz:127.0.0.5'
    labels:
      - "dsv-log=/opt/app/logs/dsv.log"
      - "vpn-log=/opt/app/logs/vpn.log"
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/django/static
    ports:
      - 1337:80
    depends_on:
      - django
volumes:
  postgres_data:
  static_volume:
