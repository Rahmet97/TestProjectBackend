# Generated by Django 3.2.18 on 2023-04-12 10:36

import contracts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgreementStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConnetMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=10, unique=True)),
                ('id_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('contract_date', models.DateTimeField(blank=True)),
                ('condition', models.IntegerField(default=0)),
                ('contract_cash', models.DecimalField(decimal_places=2, max_digits=20)),
                ('payed_cash', models.DecimalField(decimal_places=2, max_digits=20)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('base64file', models.TextField(blank=True, null=True)),
                ('hashcode', models.CharField(blank=True, max_length=255, null=True)),
                ('like_preview_pdf', models.FileField(blank=True, null=True, upload_to='media/Contract/pdf/')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContractStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(blank=True, upload_to=contracts.models.slugify_upload)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('summary', models.IntegerField(choices=[(1, 'Shartnoma imzolash maqsadga muvofiq'), (0, 'Shartnoma imzolash maqsadga muvofiq emas')])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.contract')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.role')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to=contracts.models.slugify_upload)),
                ('user_type', models.IntegerField(choices=[(1, 'Jismoniy'), (2, 'Yuridik'), (3, 'Yuridik va jismoniy')])),
                ('period', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('need_documents', models.ManyToManyField(to='contracts.Document')),
                ('pinned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
            ],
        ),
        migrations.CreateModel(
            name='UserContractTarifDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rack_count', models.IntegerField(blank=True, null=True)),
                ('odf_count', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_electricity', models.IntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('connect_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contracts.connetmethod')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contracts.contract')),
            ],
        ),
        migrations.CreateModel(
            name='UserDeviceCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_count', models.IntegerField()),
                ('units_count', models.IntegerField()),
                ('electricity', models.IntegerField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.usercontracttarifdevice')),
            ],
        ),
        migrations.AddField(
            model_name='usercontracttarifdevice',
            name='devices',
            field=models.ManyToManyField(through='contracts.UserDeviceCount', to='contracts.Device'),
        ),
        migrations.AddField(
            model_name='usercontracttarifdevice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.service'),
        ),
        migrations.AddField(
            model_name='usercontracttarifdevice',
            name='tarif',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.tarif'),
        ),
        migrations.CreateModel(
            name='TarifLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('updated_date', models.DateTimeField()),
                ('tarif', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.tarif')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceParticipants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('with_eds', models.BooleanField(default=False)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.participant')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
            ],
        ),
        migrations.CreateModel(
            name='SavedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('services', models.ManyToManyField(to='contracts.Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pkcs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pkcs7', models.TextField()),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.contract')),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='participants',
            field=models.ManyToManyField(through='contracts.ServiceParticipants', to='accounts.Role'),
        ),
        migrations.AddField(
            model_name='participant',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.service'),
        ),
        migrations.CreateModel(
            name='OldContractFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=contracts.models.slugify_upload)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='old_contract_file', to='contracts.contract')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=contracts.models.slugify_upload)),
                ('service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='contracts.service')),
            ],
        ),
        migrations.CreateModel(
            name='ExpertSummaryDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to=contracts.models.slugify_upload)),
                ('client_visible', models.BooleanField(default=False)),
                ('expertsummary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.expertsummary')),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('keyword', models.CharField(blank=True, max_length=30, null=True)),
                ('new_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('new_cost_date', models.DateField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.group')),
                ('tariff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contracts.tarif')),
            ],
        ),
        migrations.CreateModel(
            name='Contracts_Participants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contracts.agreementstatus')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.contract')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='contract_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.contractstatus'),
        ),
        migrations.AddField(
            model_name='contract',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.service'),
        ),
        migrations.AddField(
            model_name='contract',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contracts.status'),
        ),
        migrations.AddField(
            model_name='contract',
            name='tarif',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contracts.tarif'),
        ),
        migrations.AddIndex(
            model_name='connetmethod',
            index=models.Index(fields=['name'], name='contracts_c_name_c0bdf5_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='contracts_s_name_407a7f_idx'),
        ),
        migrations.AddIndex(
            model_name='pkcs',
            index=models.Index(fields=['contract', 'pkcs7'], name='contracts_p_contrac_e5d88f_idx'),
        ),
        migrations.AddIndex(
            model_name='expertsummary',
            index=models.Index(fields=['contract', 'user', 'date'], name='contracts_e_contrac_d88a6a_idx'),
        ),
        migrations.AddIndex(
            model_name='contracts_participants',
            index=models.Index(fields=['contract', 'role', 'agreement_status'], name='contracts_c_contrac_bc3329_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['service', 'contract_number', 'id_code', 'client', 'contract_status', 'tarif'], name='contracts_c_service_1e7bf5_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['contract_date', 'condition', 'hashcode'], name='contracts_c_contrac_d7cc3a_idx'),
        ),
    ]
